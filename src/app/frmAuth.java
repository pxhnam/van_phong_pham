package app;

import connection.DataAccess;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import user.User;

public class frmAuth extends javax.swing.JFrame {

    private DataAccess access;
    private User user;

    public frmAuth() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        getContentPane().setBackground(new Color(0, 0, 0, 0));
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        user = new User();
        loadData();
    }

    public void loadData() {
        try {
            access = new DataAccess();
            ResultSet res;
            res = access.Query("SELECT * FROM Nhan_Vien WHERE Quyen = 1");
            DefaultTableModel tableModel;
            tableModel = (DefaultTableModel) tableManager.getModel();
            tableModel.setRowCount(0);
            while (res.next()) {
                tableModel.addRow(new Object[]{
                    res.getString("MaNV"),
                    res.getString("Ten_Dang_Nhap"),
                    res.getString("TenNV"),
                    res.getString("SDT"),
                    checkSex(res.getInt("Gioi_Tinh")),
                    res.getDate("Ngay_Sinh")});
            }
            res = access.Query("SELECT * FROM Nhan_Vien WHERE Quyen = 0");
            tableModel = (DefaultTableModel) tableSale.getModel();
            tableModel.setRowCount(0);
            while (res.next()) {
                tableModel.addRow(new Object[]{
                    res.getString("MaNV"),
                    res.getString("Ten_Dang_Nhap"),
                    res.getString("TenNV"),
                    res.getString("SDT"),
                    checkSex(res.getInt("Gioi_Tinh")),
                    res.getDate("Ngay_Sinh"),});
            }
        } catch (SQLException e) {
            System.out.println(e.toString());
        }
    }

    public String checkSex(int sex) {
        if (sex == 1) {
            return "Nam";
        } else {
            return "Nữ";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableManager = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableSale = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Phân Quyền Người Dùng");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhân Viên Quản Lý", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat Alternates Light", 0, 15))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N

        tableManager.setFont(new java.awt.Font("Montserrat Light", 0, 15)); // NOI18N
        tableManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Nhân Viên", "Tên Đăng Nhập", "Tên Nhân Viên", "Số Điện Thoại", "Giới Tính", "Ngày Sinh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableManager.setFocusable(false);
        tableManager.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableManager.setRowHeight(20);
        tableManager.setSelectionBackground(new java.awt.Color(102, 102, 255));
        tableManager.setShowVerticalLines(false);
        tableManager.getTableHeader().setReorderingAllowed(false);
        tableManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableManagerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableManager);
        if (tableManager.getColumnModel().getColumnCount() > 0) {
            tableManager.getColumnModel().getColumn(0).setResizable(false);
            tableManager.getColumnModel().getColumn(1).setResizable(false);
            tableManager.getColumnModel().getColumn(2).setResizable(false);
            tableManager.getColumnModel().getColumn(3).setResizable(false);
            tableManager.getColumnModel().getColumn(4).setResizable(false);
            tableManager.getColumnModel().getColumn(5).setResizable(false);
        }
        tableManager.getTableHeader().setOpaque(false);
        //tableManager.getTableHeader().setBackground(new Color(3,155,216));
        //tableManager.getTableHeader().setForeground(new Color(255,255,255));
        tableManager.getTableHeader().setFont(new Font("Montsrrat", Font.BOLD, 15));
        tableManager.setRowHeight(25);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nhân Viên Bán Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat Alternates Light", 0, 15))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Montserrat", 0, 15)); // NOI18N

        tableSale.setFont(new java.awt.Font("Montserrat Light", 0, 15)); // NOI18N
        tableSale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Nhân Viên", "Tên Đăng Nhập", "Tên Nhân Viên", "Số Điện Thoại", "Giới Tính", "Ngày Sinh"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSale.setFocusable(false);
        tableSale.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tableSale.setRowHeight(20);
        tableSale.setSelectionBackground(new java.awt.Color(102, 102, 255));
        tableSale.setShowVerticalLines(false);
        tableSale.getTableHeader().setReorderingAllowed(false);
        tableSale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSaleMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableSale);
        if (tableSale.getColumnModel().getColumnCount() > 0) {
            tableSale.getColumnModel().getColumn(0).setResizable(false);
            tableSale.getColumnModel().getColumn(1).setResizable(false);
            tableSale.getColumnModel().getColumn(2).setResizable(false);
            tableSale.getColumnModel().getColumn(3).setResizable(false);
            tableSale.getColumnModel().getColumn(4).setResizable(false);
            tableSale.getColumnModel().getColumn(5).setResizable(false);
        }
        tableSale.getTableHeader().setOpaque(false);
        tableSale.getTableHeader().setFont(new Font("Montsrrat", Font.BOLD, 15));
        tableSale.setRowHeight(25);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void tableManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableManagerMouseClicked
        if (evt.getClickCount() == 2) {
            int row = this.tableManager.getSelectedRow();
            String MaNV = (this.tableManager.getModel()).getValueAt(row, 0).toString();
            String TenNV = (this.tableManager.getModel()).getValueAt(row, 2).toString();
            int result = JOptionPane.showConfirmDialog(this, "Bạn có muốn hủy quyền của " + TenNV + " không?", "Xác Nhận", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                try {
                    JPasswordField passwordField = new JPasswordField();
                    int action = JOptionPane.showConfirmDialog(this, passwordField, "Thông Báo", JOptionPane.OK_CANCEL_OPTION);
                    String pwd = new String(passwordField.getPassword());
                    if (action == JOptionPane.YES_OPTION) {
                        if (!"".equals(pwd)) {
                            access = new DataAccess();
                            ResultSet checkPass = access.Query("SELECT * FROM Nhan_Vien Where MaNV = '" + user.getMaNV() + "'");
                            if (checkPass.next()) {
                                if (checkPass.getString("Mat_Khau").equals(pwd)) {
                                    int res = access.Update("UPDATE Nhan_Vien SET Quyen = 0 WHERE MaNV = '" + MaNV + "'");
                                    if (res != 0) {
                                        JOptionPane.showMessageDialog(null, "Hủy Thành Công");
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Hủy Thất Bại");
                                    }
                                    loadData();
                                } else {
                                    JOptionPane.showMessageDialog(this, "Bạn đã nhập sai mật khẩu!!!");
                                }

                            }
                        }
                    }
                } catch (HeadlessException e) {
                    System.out.println(e.toString());
                } catch (SQLException ex) {
                    Logger.getLogger(frmAuth.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_tableManagerMouseClicked

    private void tableSaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSaleMouseClicked
        if (evt.getClickCount() == 2) {
            int row = this.tableSale.getSelectedRow();
            String MaNV = (this.tableSale.getModel()).getValueAt(row, 0).toString();
            String TenNV = (this.tableSale.getModel()).getValueAt(row, 2).toString();
            int result = JOptionPane.showConfirmDialog(this, "Bạn có muốn cấp quyền cho " + TenNV + " không?", "Xác Nhận", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                try {
                    JPasswordField passwordField = new JPasswordField();
                    int action = JOptionPane.showConfirmDialog(this, passwordField, "Thông Báo", JOptionPane.OK_CANCEL_OPTION);
                    String pwd = new String(passwordField.getPassword());
                    if (action == JOptionPane.YES_OPTION) {
                        if (!"".equals(pwd)) {
                            access = new DataAccess();
                            ResultSet checkPass = access.Query("SELECT * FROM Nhan_Vien Where MaNV = '" + user.getMaNV() + "'");
                            if (checkPass.next()) {
                                if (checkPass.getString("Mat_Khau").equals(pwd)) {
                                    int res = access.Update("UPDATE Nhan_Vien SET Quyen = 1 WHERE MaNV = '" + MaNV + "'");
                                    if (res != 0) {
                                        JOptionPane.showMessageDialog(null, "Cấp Thành Công");
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Cấp Thất Bại");
                                    }
                                    loadData();
                                } else {
                                    JOptionPane.showMessageDialog(this, "Bạn đã nhập sai mật khẩu!!!");
                                }

                            }
                        }
                    }
                } catch (HeadlessException e) {
                    System.out.println(e.toString());
                } catch (SQLException ex) {
                    Logger.getLogger(frmAuth.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_tableSaleMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAuth.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new frmAuth().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableManager;
    private javax.swing.JTable tableSale;
    // End of variables declaration//GEN-END:variables
}
